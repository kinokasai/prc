type Dir = Up | Down

node move_y (key: Dir, y: int) return (y': int)
let
    y' = match key with
         | Up -> y - diff
         | Down -> y + diff
         end
tel

/*
node character (x: int, y: int) return (x': int, y': int) 
let 
    x' >= x - 5
    x' <= x + 10
    y' > y + abs (x' - x)
    y' < y + 2 * abs (x' - x)
tel
*/

node main (key : Dir) return (y : int)
let
    y = 0 fby move_y(key, y)
tel;
